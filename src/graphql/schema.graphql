### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Certification {
  desc: String!
  id: String!
  index: Int!
  name: String!
  user: User!
  userId: String!
  year: String!
}

input CertificationOrderByRelationAggregateInput {
  _count: SortOrder
}

type Education {
  date: String
  degree: String!
  id: String!
  index: Int!
  institution: String!
  user: User!
  userId: String!
}

input EducationOrderByRelationAggregateInput {
  _count: SortOrder
}

type Experience {
  id: String!
  index: Int!
  location: String!
  name: String!
  period: String!
  type: String!
  user: User!
  userId: String!
}

input ExperienceOrderByRelationAggregateInput {
  _count: SortOrder
}

type Query {
  user: [User]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByWithRelationInput!]): [User!]!
}

type Skill {
  id: String!
  listening: Int!
  personalities: [String!]!
  reading: Int!
  skills: [String!]!
  speaking: Int!
  userId: String!
  writing: Int!
}

input SkillOrderByWithRelationInput {
  id: SortOrder
  index: SortOrder
  listening: SortOrder
  personalities: SortOrder
  reading: SortOrder
  skills: SortOrder
  speaking: SortOrder
  user: UserOrderByWithRelationInput
  userId: SortOrder
  writing: SortOrder
}

enum SortOrder {
  asc
  desc
}

type User {
  born: String!
  certification: [Certification]!
  education: [Education]!
  email: String!
  experience: [Experience]!
  github: String!
  id: String!
  image: String!
  index: Int!
  location: String!
  name: String!
  objective: String!
  phone: String!
  skill: Skill
  strength: String!
  tagline: String!
  website: String!
}

input UserOrderByWithRelationInput {
  born: SortOrder
  certification: CertificationOrderByRelationAggregateInput
  education: EducationOrderByRelationAggregateInput
  email: SortOrder
  experience: ExperienceOrderByRelationAggregateInput
  github: SortOrder
  id: SortOrder
  image: SortOrder
  index: SortOrder
  location: SortOrder
  name: SortOrder
  objective: SortOrder
  phone: SortOrder
  skill: SkillOrderByWithRelationInput
  strength: SortOrder
  tagline: SortOrder
  website: SortOrder
}

input UserWhereUniqueInput {
  id: String
}